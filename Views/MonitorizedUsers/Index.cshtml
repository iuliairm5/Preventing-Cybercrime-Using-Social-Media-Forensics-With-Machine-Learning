@model IEnumerable<MonitorizedUser>

@{
    ViewBag.Title = "MonitorizedUsers";
    Layout = "~/Views/Shared/_MonitorizedUsersLayout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
<style>
    body {
        position: relative;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    .btn-custom {
            border: 2px solid #000;
            padding: 5px 10px;
            color: #000;
            font-weight: bold;
            text-decoration: none;
            margin: 10px;
            display: inline-block;
            background-color: #FFCBA4;
        }

    body::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: url('/images/background0.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        opacity: 0.5; /* Adjust the opacity value (0.5) as desired */
        z-index: -1;
    }
    table.table {
            background-color: #fff; /* Set table background color to white */
        }

        table.table th {
            background-color: lightgreen; /* Set column headers background color to light green */
        }
        table.table td {
        background-color: #f0ffff; /* Set table rows background color to white */
    }
</style>


</head>
<body>

<h1>My monitored users</h1>

<table class="table table-striped table-bordered table-sm">
    <tr>
        @*<th>MonitorizationID</th>*@
        <th>Username</th>
       
        <th>DateTime</th>
        <th>Actions</th>
    </tr>
    @foreach (MonitorizedUser item in Model)
    {
        <tr>
            @*<td>@item.PREDICTIONID</td>*@
            <td>@item.Username</td>

            <td>@item.DateTime</td>

            <td class="text-center">
    <div>
        <div style="display: inline-block;">
            <a asp-action="AccountDetails" asp-route-monitorizationID="@item.MonitorizationID" class="btn btn-sm btn-primary">Add Profile Data</a>
        </div>

        <div style="display: inline-block;">
            <a asp-action="AccountLatestTweets" asp-route-monitorizationID="@item.MonitorizationID" class="btn btn-sm btn-warning">Add Latest Tweets</a>
        </div>

        <form asp-action="ViewAccountDetails" method="post" style="display: inline">
            <input type="hidden" name="MonitorizationID" value="@item.MonitorizationID" />
            <button type="submit" class="btn btn-sm btn-primary">View Profile Data</button>
        </form>

        <form asp-action="ViewAccountLatestTweets" method="post" style="display: inline">
            <input type="hidden" name="MonitorizationID" value="@item.MonitorizationID" />
            <button type="submit" class="btn btn-sm btn-warning">View Latest Tweets</button>
        </form>

         @*NEW*@
        <div style="display: inline-block;">
            <a asp-action="ViewInternetData" asp-route-monitorizationID="@item.MonitorizationID" class="btn btn-sm btn-success">View Internet Data</a>
        </div>




         <div style="display: inline-block;">
            <a asp-action="PDF" asp-route-monitorizationID="@item.MonitorizationID" class="btn btn-sm btn-success">See PDF Report</a>
        </div>

        @*
        <form asp-action="PDF" method="post" style="display: inline">
            <input type="hidden" name="MonitorizationID" value="@item.MonitorizationID" />
            <button type="submit" class="btn btn-sm btn-success">Download PDF Report</button>
        </form>
        
        <form asp-action="Edit" method="post" style="display: inline">
        <input type="hidden" name="MonitorizationID" value="@item.MonitorizationID" />
        <button type="submit" class="btn btn-sm btn-danger">Edit Username</button>
        </form>
        *@

        <form asp-action="Delete" method="post" style="display: inline">
            <input type="hidden" name="MonitorizationID" value="@item.MonitorizationID" />
            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
        </form>
    </div>
</td>

        </tr>
    }
</table>

        <div>
         <a asp-action="AddUsername" class="btn btn-custom" >Add user !</a> </div>

         <button type="button" onclick="location.href='@Url.Action("MyProfile","MonitorizedUsers")'">Back to the Main Page</button>


   <div style="max-width: 400px; margin: auto;">
    <canvas id="locationChart" style="max-height: 300px;"></canvas>
</div>
        @section scripts 
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var locations = [];
        var counts = [];

        @foreach (var item in Model)
        {
            if (!string.IsNullOrEmpty(item.Location))
            {
                              
                <text>
                    if (locations.includes('@item.Location')) {
                    var index = locations.indexOf('@item.Location');
                    counts[index]++;
                }
                else {
                    locations.push('@item.Location');
                    counts.push(1);
                }
                </text>
                
                
            }
        }
        var colors = generateRandomColors(locations.length);
        var ctx = document.getElementById('locationChart').getContext('2d');
        var locationChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: locations,
                datasets: [{
                    label: 'Location Count',
                    data: counts,
                    backgroundColor: colors,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        stepSize: 1
                    }
                }
            }
        });

         // Function to generate random colors
        function generateRandomColors(count) {
            var colors = [];
            for (var i = 0; i < count; i++) {
                var color = '#' + Math.floor(Math.random() * 16777215).toString(16);
                colors.push(color);
            }
            return colors;
        }

    </script>
}
</body>
</html>